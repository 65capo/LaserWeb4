{"version":3,"sources":["webpack:///webpack/bootstrap f335e40b8176ce11cdc2","webpack:///./lib/workers/cam-raster.js","webpack:///./lib/lw.raster2gcode/raster-to-gcode.js","webpack:///./lib/lw.raster2gcode/canvas-grid.js","webpack:///./lib/lw.raster2gcode/canvas-filters.js","webpack:///../~/floyd-steinberg/floyd-steinberg.js"],"names":["self","onmessage","event","data","cmd","start","rasterToGcode","settings","Object","assign","properties","on","postMessage","run","abort","RasterToGcode","ppi","x","y","toolDiameter","rapidRate","feedRate","rateUnit","beamRange","min","max","beamPower","milling","zSafe","zSurface","zDepth","passDepth","offsets","X","Y","trimLine","joinPixel","burnWhite","verboseG","diagonal","overscan","precision","S","nonBlocking","filters","smoothing","brightness","contrast","gamma","grayscale","shadesOfGray","invertColor","onProgress","onProgressContext","onDone","onDoneContext","onAbort","onAbortContext","Error","passes","Math","abs","floor","ppm","parseFloat","toFixed","scaleRatio","running","gcode","gcodes","currentLine","lastCommands","outputSize","width","height","G1","G0","beamOffset","realBeamRange","_registerUserCallbacks","callbacks","size","undefined","_addHeader","_scanDiagonally","_scanHorizontally","push","options","i","length","splice","join","value","range","name","commands","Array","prototype","slice","call","arguments","command","line","il","_command","apply","defaultValue","pixel","getPixel","gray","error","index","point","G","s","_mapPixelPower","first","lastWhite","last","lastColored","p","shift","pop","points","power","reversed","pixels","firstPoint","lastPoint","rightPoint","leftPoint","unshift","_processMillingLine","_processLaserLine","_trimCurrentLine","_reduceCurrentLine","reverse","addCommand","_getPoint","plung","Z","zMax","pass","passNum","_overscanCurrentLine","w","h","computeCurrentLine","_getPixelPower","percent","lastPercent","processCurrentLine","_processCurrentLine","round","_onProgress","processNextLine","_onAbort","setTimeout","forEach","_onDone","totalLines","lineNum","callback","context","method","toUpperCase","heightMap","CanvasGrid","cellSize","cols","rows","file","image","url","canvas","input","File","loadFromFile","Image","loadFromImage","URL","loadFromURL","trim","Promise","reject","src","resolve","onload","then","catch","onerror","_loadImage","createObjectURL","_processImage","ceil","sx","sy","sw","sh","document","createElement","getContext","fillStyle","fillRect","drawImage","getImageData","parseInt","isNaN","col","row","pixelData","color","r","g","b","a","grid","coords","grayscaleAlgorithms","exp","log","algorithm","shades","indexOf","canvasFilters","dithering","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","imageData","contrastFactor","brightnessOffset","gammaCorrection","shadesOfGrayFactor","putImageData"],"mappings":";AAAA;AACA;AACA;AACA,mCAA2B;AAC3B;AACA,YAAI;AACJ;AACA,WAAG;AACH;AACA;;AAEA;AACA,sDAA8C;AAC9C;AACA,qCAA6B;;AAE7B,+CAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAS;AACT;AACA;AACA;AACA;AACA,eAAO;AACP,cAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAK;AACL,YAAI;AACJ;AACA;AACA;AACA;;AAEA,8CAAsC;AACtC;AACA;AACA,qCAA6B;AAC7B,qCAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,gBAAgB;AACpC;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,4BAAoB,gBAAgB;AACpC;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA,aAAK;AACL;AACA;AACA;AACA,aAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAiB,8BAA8B;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,0BAAkB,qBAAqB;AACvC;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;;AAEA,4DAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA,YAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAmB,2BAA2B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;AACA,cAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,0BAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAkB,4BAA4B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAAmB,uCAAuC;AAC1D;AACA;AACA;AACA;AACA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","file":"f335e40b8176ce11cdc2.worker.js","sourcesContent":[" \t// Copied from https://github.com/facebook/react/blob/bef45b0/src/shared/utils/canDefineProperty.js\r\n \tvar canDefineProperty = false;\r\n \ttry {\r\n \t\tObject.defineProperty({}, \"x\", {\r\n \t\t\tget: function() {}\r\n \t\t});\r\n \t\tcanDefineProperty = true;\r\n \t} catch(x) {\r\n \t\t// IE will fail on defineProperty\r\n \t}\r\n \t\r\n \tvar hotApplyOnUpdate = true;\r\n \tvar hotCurrentHash = \"f335e40b8176ce11cdc2\"; // eslint-disable-line no-unused-vars\r\n \tvar hotCurrentModuleData = {};\r\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\r\n \t\r\n \tfunction hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar me = installedModules[moduleId];\r\n \t\tif(!me) return __webpack_require__;\r\n \t\tvar fn = function(request) {\r\n \t\t\tif(me.hot.active) {\r\n \t\t\t\tif(installedModules[request]) {\r\n \t\t\t\t\tif(installedModules[request].parents.indexOf(moduleId) < 0)\r\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\r\n \t\t\t\t\tif(me.children.indexOf(request) < 0)\r\n \t\t\t\t\t\tme.children.push(request);\r\n \t\t\t\t} else hotCurrentParents = [moduleId];\r\n \t\t\t} else {\r\n \t\t\t\tconsole.warn(\"[HMR] unexpected require(\" + request + \") from disposed module \" + moduleId);\r\n \t\t\t\thotCurrentParents = [];\r\n \t\t\t}\r\n \t\t\treturn __webpack_require__(request);\r\n \t\t};\r\n \t\tfor(var name in __webpack_require__) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(__webpack_require__, name)) {\r\n \t\t\t\tif(canDefineProperty) {\r\n \t\t\t\t\tObject.defineProperty(fn, name, (function(name) {\r\n \t\t\t\t\t\treturn {\r\n \t\t\t\t\t\t\tconfigurable: true,\r\n \t\t\t\t\t\t\tenumerable: true,\r\n \t\t\t\t\t\t\tget: function() {\r\n \t\t\t\t\t\t\t\treturn __webpack_require__[name];\r\n \t\t\t\t\t\t\t},\r\n \t\t\t\t\t\t\tset: function(value) {\r\n \t\t\t\t\t\t\t\t__webpack_require__[name] = value;\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t};\r\n \t\t\t\t\t}(name)));\r\n \t\t\t\t} else {\r\n \t\t\t\t\tfn[name] = __webpack_require__[name];\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\tfunction ensure(chunkId, callback) {\r\n \t\t\tif(hotStatus === \"ready\")\r\n \t\t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotChunksLoading++;\r\n \t\t\t__webpack_require__.e(chunkId, function() {\r\n \t\t\t\ttry {\r\n \t\t\t\t\tcallback.call(null, fn);\r\n \t\t\t\t} finally {\r\n \t\t\t\t\tfinishChunkLoading();\r\n \t\t\t\t}\r\n \t\r\n \t\t\t\tfunction finishChunkLoading() {\r\n \t\t\t\t\thotChunksLoading--;\r\n \t\t\t\t\tif(hotStatus === \"prepare\") {\r\n \t\t\t\t\t\tif(!hotWaitingFilesMap[chunkId]) {\r\n \t\t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t\tif(hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\t\t\t\thotUpdateDownloaded();\r\n \t\t\t\t\t\t}\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t});\r\n \t\t}\r\n \t\tif(canDefineProperty) {\r\n \t\t\tObject.defineProperty(fn, \"e\", {\r\n \t\t\t\tenumerable: true,\r\n \t\t\t\tvalue: ensure\r\n \t\t\t});\r\n \t\t} else {\r\n \t\t\tfn.e = ensure;\r\n \t\t}\r\n \t\treturn fn;\r\n \t}\r\n \t\r\n \tfunction hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars\r\n \t\tvar hot = {\r\n \t\t\t// private stuff\r\n \t\t\t_acceptedDependencies: {},\r\n \t\t\t_declinedDependencies: {},\r\n \t\t\t_selfAccepted: false,\r\n \t\t\t_selfDeclined: false,\r\n \t\t\t_disposeHandlers: [],\r\n \t\r\n \t\t\t// Module API\r\n \t\t\tactive: true,\r\n \t\t\taccept: function(dep, callback) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfAccepted = true;\r\n \t\t\t\telse if(typeof dep === \"function\")\r\n \t\t\t\t\thot._selfAccepted = dep;\r\n \t\t\t\telse if(typeof dep === \"object\")\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback;\r\n \t\t\t\telse\r\n \t\t\t\t\thot._acceptedDependencies[dep] = callback;\r\n \t\t\t},\r\n \t\t\tdecline: function(dep) {\r\n \t\t\t\tif(typeof dep === \"undefined\")\r\n \t\t\t\t\thot._selfDeclined = true;\r\n \t\t\t\telse if(typeof dep === \"number\")\r\n \t\t\t\t\thot._declinedDependencies[dep] = true;\r\n \t\t\t\telse\r\n \t\t\t\t\tfor(var i = 0; i < dep.length; i++)\r\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\r\n \t\t\t},\r\n \t\t\tdispose: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\taddDisposeHandler: function(callback) {\r\n \t\t\t\thot._disposeHandlers.push(callback);\r\n \t\t\t},\r\n \t\t\tremoveDisposeHandler: function(callback) {\r\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\r\n \t\t\t\tif(idx >= 0) hot._disposeHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t// Management API\r\n \t\t\tcheck: hotCheck,\r\n \t\t\tapply: hotApply,\r\n \t\t\tstatus: function(l) {\r\n \t\t\t\tif(!l) return hotStatus;\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\taddStatusHandler: function(l) {\r\n \t\t\t\thotStatusHandlers.push(l);\r\n \t\t\t},\r\n \t\t\tremoveStatusHandler: function(l) {\r\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\r\n \t\t\t\tif(idx >= 0) hotStatusHandlers.splice(idx, 1);\r\n \t\t\t},\r\n \t\r\n \t\t\t//inherit from previous dispose call\r\n \t\t\tdata: hotCurrentModuleData[moduleId]\r\n \t\t};\r\n \t\treturn hot;\r\n \t}\r\n \t\r\n \tvar hotStatusHandlers = [];\r\n \tvar hotStatus = \"idle\";\r\n \t\r\n \tfunction hotSetStatus(newStatus) {\r\n \t\thotStatus = newStatus;\r\n \t\tfor(var i = 0; i < hotStatusHandlers.length; i++)\r\n \t\t\thotStatusHandlers[i].call(null, newStatus);\r\n \t}\r\n \t\r\n \t// while downloading\r\n \tvar hotWaitingFiles = 0;\r\n \tvar hotChunksLoading = 0;\r\n \tvar hotWaitingFilesMap = {};\r\n \tvar hotRequestedFilesMap = {};\r\n \tvar hotAvailibleFilesMap = {};\r\n \tvar hotCallback;\r\n \t\r\n \t// The update info\r\n \tvar hotUpdate, hotUpdateNewHash;\r\n \t\r\n \tfunction toModuleId(id) {\r\n \t\tvar isNumber = (+id) + \"\" === id;\r\n \t\treturn isNumber ? +id : id;\r\n \t}\r\n \t\r\n \tfunction hotCheck(apply, callback) {\r\n \t\tif(hotStatus !== \"idle\") throw new Error(\"check() is only allowed in idle status\");\r\n \t\tif(typeof apply === \"function\") {\r\n \t\t\thotApplyOnUpdate = false;\r\n \t\t\tcallback = apply;\r\n \t\t} else {\r\n \t\t\thotApplyOnUpdate = apply;\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\thotSetStatus(\"check\");\r\n \t\thotDownloadManifest(function(err, update) {\r\n \t\t\tif(err) return callback(err);\r\n \t\t\tif(!update) {\r\n \t\t\t\thotSetStatus(\"idle\");\r\n \t\t\t\tcallback(null, null);\r\n \t\t\t\treturn;\r\n \t\t\t}\r\n \t\r\n \t\t\thotRequestedFilesMap = {};\r\n \t\t\thotAvailibleFilesMap = {};\r\n \t\t\thotWaitingFilesMap = {};\r\n \t\t\tfor(var i = 0; i < update.c.length; i++)\r\n \t\t\t\thotAvailibleFilesMap[update.c[i]] = true;\r\n \t\t\thotUpdateNewHash = update.h;\r\n \t\r\n \t\t\thotSetStatus(\"prepare\");\r\n \t\t\thotCallback = callback;\r\n \t\t\thotUpdate = {};\r\n \t\t\tvar chunkId = 0;\r\n \t\t\t{ // eslint-disable-line no-lone-blocks\r\n \t\t\t\t/*globals chunkId */\r\n \t\t\t\thotEnsureUpdateChunk(chunkId);\r\n \t\t\t}\r\n \t\t\tif(hotStatus === \"prepare\" && hotChunksLoading === 0 && hotWaitingFiles === 0) {\r\n \t\t\t\thotUpdateDownloaded();\r\n \t\t\t}\r\n \t\t});\r\n \t}\r\n \t\r\n \tfunction hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars\r\n \t\tif(!hotAvailibleFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\r\n \t\t\treturn;\r\n \t\thotRequestedFilesMap[chunkId] = false;\r\n \t\tfor(var moduleId in moreModules) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\r\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(--hotWaitingFiles === 0 && hotChunksLoading === 0) {\r\n \t\t\thotUpdateDownloaded();\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotEnsureUpdateChunk(chunkId) {\r\n \t\tif(!hotAvailibleFilesMap[chunkId]) {\r\n \t\t\thotWaitingFilesMap[chunkId] = true;\r\n \t\t} else {\r\n \t\t\thotRequestedFilesMap[chunkId] = true;\r\n \t\t\thotWaitingFiles++;\r\n \t\t\thotDownloadUpdateChunk(chunkId);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotUpdateDownloaded() {\r\n \t\thotSetStatus(\"ready\");\r\n \t\tvar callback = hotCallback;\r\n \t\thotCallback = null;\r\n \t\tif(!callback) return;\r\n \t\tif(hotApplyOnUpdate) {\r\n \t\t\thotApply(hotApplyOnUpdate, callback);\r\n \t\t} else {\r\n \t\t\tvar outdatedModules = [];\r\n \t\t\tfor(var id in hotUpdate) {\r\n \t\t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tcallback(null, outdatedModules);\r\n \t\t}\r\n \t}\r\n \t\r\n \tfunction hotApply(options, callback) {\r\n \t\tif(hotStatus !== \"ready\") throw new Error(\"apply() is only allowed in ready status\");\r\n \t\tif(typeof options === \"function\") {\r\n \t\t\tcallback = options;\r\n \t\t\toptions = {};\r\n \t\t} else if(options && typeof options === \"object\") {\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t} else {\r\n \t\t\toptions = {};\r\n \t\t\tcallback = callback || function(err) {\r\n \t\t\t\tif(err) throw err;\r\n \t\t\t};\r\n \t\t}\r\n \t\r\n \t\tfunction getAffectedStuff(module) {\r\n \t\t\tvar outdatedModules = [module];\r\n \t\t\tvar outdatedDependencies = {};\r\n \t\r\n \t\t\tvar queue = outdatedModules.slice();\r\n \t\t\twhile(queue.length > 0) {\r\n \t\t\t\tvar moduleId = queue.pop();\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tif(!module || module.hot._selfAccepted)\r\n \t\t\t\t\tcontinue;\r\n \t\t\t\tif(module.hot._selfDeclined) {\r\n \t\t\t\t\treturn new Error(\"Aborted because of self decline: \" + moduleId);\r\n \t\t\t\t}\r\n \t\t\t\tif(moduleId === 0) {\r\n \t\t\t\t\treturn;\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < module.parents.length; i++) {\r\n \t\t\t\t\tvar parentId = module.parents[i];\r\n \t\t\t\t\tvar parent = installedModules[parentId];\r\n \t\t\t\t\tif(parent.hot._declinedDependencies[moduleId]) {\r\n \t\t\t\t\t\treturn new Error(\"Aborted because of declined dependency: \" + moduleId + \" in \" + parentId);\r\n \t\t\t\t\t}\r\n \t\t\t\t\tif(outdatedModules.indexOf(parentId) >= 0) continue;\r\n \t\t\t\t\tif(parent.hot._acceptedDependencies[moduleId]) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[parentId])\r\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\t}\r\n \t\t\t\t\tdelete outdatedDependencies[parentId];\r\n \t\t\t\t\toutdatedModules.push(parentId);\r\n \t\t\t\t\tqueue.push(parentId);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\r\n \t\t\treturn [outdatedModules, outdatedDependencies];\r\n \t\t}\r\n \t\r\n \t\tfunction addAllToSet(a, b) {\r\n \t\t\tfor(var i = 0; i < b.length; i++) {\r\n \t\t\t\tvar item = b[i];\r\n \t\t\t\tif(a.indexOf(item) < 0)\r\n \t\t\t\t\ta.push(item);\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// at begin all updates modules are outdated\r\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\r\n \t\tvar outdatedDependencies = {};\r\n \t\tvar outdatedModules = [];\r\n \t\tvar appliedUpdate = {};\r\n \t\tfor(var id in hotUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\r\n \t\t\t\tvar moduleId = toModuleId(id);\r\n \t\t\t\tvar result = getAffectedStuff(moduleId);\r\n \t\t\t\tif(!result) {\r\n \t\t\t\t\tif(options.ignoreUnaccepted)\r\n \t\t\t\t\t\tcontinue;\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(new Error(\"Aborted because \" + moduleId + \" is not accepted\"));\r\n \t\t\t\t}\r\n \t\t\t\tif(result instanceof Error) {\r\n \t\t\t\t\thotSetStatus(\"abort\");\r\n \t\t\t\t\treturn callback(result);\r\n \t\t\t\t}\r\n \t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\r\n \t\t\t\taddAllToSet(outdatedModules, result[0]);\r\n \t\t\t\tfor(var moduleId in result[1]) {\r\n \t\t\t\t\tif(Object.prototype.hasOwnProperty.call(result[1], moduleId)) {\r\n \t\t\t\t\t\tif(!outdatedDependencies[moduleId])\r\n \t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\r\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[moduleId], result[1][moduleId]);\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Store self accepted outdated modules to require them later by the module system\r\n \t\tvar outdatedSelfAcceptedModules = [];\r\n \t\tfor(var i = 0; i < outdatedModules.length; i++) {\r\n \t\t\tvar moduleId = outdatedModules[i];\r\n \t\t\tif(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)\r\n \t\t\t\toutdatedSelfAcceptedModules.push({\r\n \t\t\t\t\tmodule: moduleId,\r\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\r\n \t\t\t\t});\r\n \t\t}\r\n \t\r\n \t\t// Now in \"dispose\" phase\r\n \t\thotSetStatus(\"dispose\");\r\n \t\tvar queue = outdatedModules.slice();\r\n \t\twhile(queue.length > 0) {\r\n \t\t\tvar moduleId = queue.pop();\r\n \t\t\tvar module = installedModules[moduleId];\r\n \t\t\tif(!module) continue;\r\n \t\r\n \t\t\tvar data = {};\r\n \t\r\n \t\t\t// Call dispose handlers\r\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\r\n \t\t\tfor(var j = 0; j < disposeHandlers.length; j++) {\r\n \t\t\t\tvar cb = disposeHandlers[j];\r\n \t\t\t\tcb(data);\r\n \t\t\t}\r\n \t\t\thotCurrentModuleData[moduleId] = data;\r\n \t\r\n \t\t\t// disable module (this disables requires from this module)\r\n \t\t\tmodule.hot.active = false;\r\n \t\r\n \t\t\t// remove module from cache\r\n \t\t\tdelete installedModules[moduleId];\r\n \t\r\n \t\t\t// remove \"parents\" references from all children\r\n \t\t\tfor(var j = 0; j < module.children.length; j++) {\r\n \t\t\t\tvar child = installedModules[module.children[j]];\r\n \t\t\t\tif(!child) continue;\r\n \t\t\t\tvar idx = child.parents.indexOf(moduleId);\r\n \t\t\t\tif(idx >= 0) {\r\n \t\t\t\t\tchild.parents.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// remove outdated dependency from module children\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tfor(var j = 0; j < moduleOutdatedDependencies.length; j++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\r\n \t\t\t\t\tvar idx = module.children.indexOf(dependency);\r\n \t\t\t\t\tif(idx >= 0) module.children.splice(idx, 1);\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Not in \"apply\" phase\r\n \t\thotSetStatus(\"apply\");\r\n \t\r\n \t\thotCurrentHash = hotUpdateNewHash;\r\n \t\r\n \t\t// insert new code\r\n \t\tfor(var moduleId in appliedUpdate) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\r\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// call accept handlers\r\n \t\tvar error = null;\r\n \t\tfor(var moduleId in outdatedDependencies) {\r\n \t\t\tif(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {\r\n \t\t\t\tvar module = installedModules[moduleId];\r\n \t\t\t\tvar moduleOutdatedDependencies = outdatedDependencies[moduleId];\r\n \t\t\t\tvar callbacks = [];\r\n \t\t\t\tfor(var i = 0; i < moduleOutdatedDependencies.length; i++) {\r\n \t\t\t\t\tvar dependency = moduleOutdatedDependencies[i];\r\n \t\t\t\t\tvar cb = module.hot._acceptedDependencies[dependency];\r\n \t\t\t\t\tif(callbacks.indexOf(cb) >= 0) continue;\r\n \t\t\t\t\tcallbacks.push(cb);\r\n \t\t\t\t}\r\n \t\t\t\tfor(var i = 0; i < callbacks.length; i++) {\r\n \t\t\t\t\tvar cb = callbacks[i];\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\tcb(outdatedDependencies);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// Load self accepted modules\r\n \t\tfor(var i = 0; i < outdatedSelfAcceptedModules.length; i++) {\r\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\r\n \t\t\tvar moduleId = item.module;\r\n \t\t\thotCurrentParents = [moduleId];\r\n \t\t\ttry {\r\n \t\t\t\t__webpack_require__(moduleId);\r\n \t\t\t} catch(err) {\r\n \t\t\t\tif(typeof item.errorHandler === \"function\") {\r\n \t\t\t\t\ttry {\r\n \t\t\t\t\t\titem.errorHandler(err);\r\n \t\t\t\t\t} catch(err) {\r\n \t\t\t\t\t\tif(!error)\r\n \t\t\t\t\t\t\terror = err;\r\n \t\t\t\t\t}\r\n \t\t\t\t} else if(!error)\r\n \t\t\t\t\terror = err;\r\n \t\t\t}\r\n \t\t}\r\n \t\r\n \t\t// handle errors in accept handlers and self accepted module load\r\n \t\tif(error) {\r\n \t\t\thotSetStatus(\"fail\");\r\n \t\t\treturn callback(error);\r\n \t\t}\r\n \t\r\n \t\thotSetStatus(\"idle\");\r\n \t\tcallback(null, outdatedModules);\r\n \t}\r\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false,\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: hotCurrentParents,\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \t// Load entry module and return exports\n \treturn hotCreateRequire(0)(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f335e40b8176ce11cdc2","import { RasterToGcode } from '../lw.raster2gcode/raster-to-gcode.js'\n\n// On messsage received\nself.onmessage = function (event) {\n    if (event.data.cmd === 'start') {\n        start(event.data);\n    }\n}\n\n\n\n// Start job\nfunction start(data) {\n\n    // Create RasterToGcode object\n    var rasterToGcode = new RasterToGcode(data.settings);\n        Object.assign( rasterToGcode, data.properties );\n    // Register events callbacks\n        rasterToGcode.on('progress', function (event) {\n            self.postMessage({ event: 'onProgress', ...event });\n        }).on('done', function (event) {\n            self.postMessage({ event: 'onDone', ...event });\n        }).on('abort', function () {\n            self.postMessage({ event: 'onAbort' });\n        });\n\n    \n    self.postMessage({ event: 'start' });\n    rasterToGcode.run();\n\n}\n\n// Abort job\nfunction abort() {\n    rasterToGcode.abort();\n}\n\n\n// WEBPACK FOOTER //\n// ./lib/workers/cam-raster.js","import CanvasGrid from './canvas-grid'\n\n// RasterToGcode class\nclass RasterToGcode extends CanvasGrid {\n    // Class constructor...\n    constructor(settings) {\n        // Defaults settings\n        settings = Object.assign({\n            ppi: { x: 254, y: 254 }, // Pixel Per Inch (25.4 ppi == 1 ppm)\n\n            toolDiameter: 0.1,      // Tool diameter in millimeters\n            rapidRate   : 1500,     // Rapid rate in mm/min (G0 F value) nullish value to disable\n            feedRate    : 500,      // Feed rate in mm/min (G1 F value)\n            rateUnit    : 'mm/min', // Rapid/Feed rate unit [mm/min, mm/sec]\n\n            beamRange: { min: 0, max: 1 },   // Beam power range (Firmware value)\n            beamPower: { min: 0, max: 100 }, // Beam power (S value) as percentage of beamRange\n\n            milling  : false, // EXPERIMENTAL\n            zSafe    : 5,     // Safe Z for fast move\n            zSurface : 0,     // Usinable surface (white pixels)\n            zDepth   : -10,   // Z depth (black pixels)\n            passDepth: 1,     // Pass depth in millimeters\n\n            offsets  : { X: 0, Y: 0 }, // Global coordinates offsets\n            trimLine : true,           // Trim trailing white pixels\n            joinPixel: true,           // Join consecutive pixels with same intensity\n            burnWhite: true,           // [true = G1 S0 | false = G0] on inner white pixels\n            verboseG : false,          // Output verbose GCode (print each commands)\n            diagonal : false,          // Go diagonally (increase the distance between points)\n            overscan : 0,              // Add some extra white space (in millimeters) before and after each line\n\n            precision: { X: 2, Y: 2, S: 4 }, // Number of decimals for each commands\n\n            nonBlocking: true, // Use setTimeout to avoid blocking the UI\n\n            filters: {\n                smoothing   : 0,      // Smoothing the input image ?\n                brightness  : 0,      // Image brightness [-255 to +255]\n                contrast    : 0,      // Image contrast [-255 to +255]\n                gamma       : 0,      // Image gamma correction [0.01 to 7.99]\n                grayscale   : 'none', // Graysale algorithm [average, luma, luma-601, luma-709, luma-240, desaturation, decomposition-[min|max], [red|green|blue]-chanel]\n                shadesOfGray: 256,    // Number of shades of gray [2-256]\n                invertColor : false   // Invert color...\n            },\n\n            onProgress       : null, // On progress callbacks\n            onProgressContext: null, // On progress callback context\n\n            onDone       : null, // On done callback\n            onDoneContext: null, // On done callback context\n\n            onAbort       : null, // On abort callback\n            onAbortContext: null  // On abort callback context\n        }, settings || {})\n\n        // Init properties\n        super(settings)\n\n        // Milling settings\n        if (this.milling) {\n            if (this.zSafe < this.zSurface) {\n                throw new Error('\"zSafe\" must be greater to \"zSurface\"')\n            }\n\n            this.passes = Math.abs(Math.floor(this.zDepth / this.passDepth))\n        }\n\n        // Negative beam size ?\n        if (this.toolDiameter <= 0) {\n            throw new Error('\"toolDiameter\" must be positive')\n        }\n\n        // Uniforme ppi\n        if (! this.ppi.x) {\n            this.ppi = { x: this.ppi, y: this.ppi }\n        }\n\n        // Calculate PPM = Pixel Per Millimeters\n        this.ppm = {\n            x: parseFloat((2540 / (this.ppi.x * 100)).toFixed(10)),\n            y: parseFloat((2540 / (this.ppi.y * 100)).toFixed(10))\n        }\n\n        // Calculate scale ratio\n        this.scaleRatio = {\n            x: this.ppm.x / this.toolDiameter,\n            y: this.ppm.y / this.toolDiameter\n        }\n\n        // State...\n        this.running      = false\n        this.gcode        = null\n        this.gcodes       = null\n        this.currentLine  = null\n        this.lastCommands = null\n\n        // Output size in millimeters\n        this.outputSize = { width : 0, height: 0 }\n\n        // G0 command\n        this.G1 = ['G', 1]\n        this.G0 = ['G', this.burnWhite ? 1 : 0]\n\n        // Calculate beam offset\n        this.beamOffset = this.toolDiameter * 1000 / 2000\n\n        // Calculate real beam range\n        this.realBeamRange = {\n            min: this.beamRange.max / 100 * this.beamPower.min,\n            max: this.beamRange.max / 100 * this.beamPower.max\n        }\n\n        // Adjuste feed rate to mm/min\n        if (this.rateUnit === 'mm/sec') {\n            this.feedRate  *= 60\n\n            if (this.rapidRate) {\n                this.rapidRate *= 60\n            }\n        }\n\n        // Register user callbacks\n        this._registerUserCallbacks(this)\n    }\n\n    // Register user callbacks\n    _registerUserCallbacks(callbacks) {\n        // Register user callbacks\n        callbacks.onProgress && this.on('progress', callbacks.onProgress, callbacks.onProgressContext)\n        callbacks.onAbort && this.on('abort', callbacks.onAbort, callbacks.onAbortContext)\n        callbacks.onDone && this.on('done', callbacks.onDone, callbacks.onDoneContext)\n    }\n\n    // Process image\n    _processImage() {\n        // Call parent method\n        super._processImage()\n\n        // Calculate output size\n        this.outputSize = {\n            width : this.size.width  * (this.toolDiameter * 1000) / 1000,\n            height: this.size.height * (this.toolDiameter * 1000) / 1000\n        }\n    }\n\n    // Abort job\n    abort() {\n        this.running = false\n    }\n\n    // Process image and return gcode string\n    run(settings) {\n        if (this.running) {\n            return\n        }\n\n        // Reset state\n        this.running      = true\n        this.gcode        = []\n        this.gcodes       = []\n        this.lastCommands = {}\n        this.currentLine  = null\n\n        // Defaults settings\n        settings = settings || {}\n\n        // Register user callbacks\n        this._registerUserCallbacks(settings)\n\n        // Non blocking mode ?\n        let nonBlocking = this.nonBlocking\n\n        if (settings.nonBlocking !== undefined) {\n            nonBlocking = settings.nonBlocking\n        }\n\n        // Add gcode header\n        this._addHeader()\n\n        // Scan type ?\n        if (this.diagonal) {\n            this._scanDiagonally(nonBlocking)\n        }\n        else {\n            this._scanHorizontally(nonBlocking)\n        }\n\n        if (! nonBlocking) {\n            return this.gcode\n        }\n    }\n\n    _addHeader() {\n        // Base headers\n        this.gcode.push(\n            '; Generated by LaserWeb (lw.raster-to-gcode.js)',\n            '; Size       : ' + this.outputSize.width + ' x ' + this.outputSize.height + ' mm',\n            '; PPI        : x: ' + this.ppi.x + ' - y: ' + this.ppi.y,\n            '; PPM        : x: ' + this.ppm.x + ' - y: ' + this.ppm.y,\n            '; Tool diam. : ' + this.toolDiameter + ' mm',\n            '; Feed rate  : ' + this.feedRate + ' ' + this.rateUnit\n        )\n\n        if (this.rapidRate) {\n           this.gcode.push('; Rapid rate  : ' + this.rapidRate + ' ' + this.rateUnit)\n        }\n\n        if (this.milling) {\n            this.gcode.push(\n                '; Z safe     : ' + this.zSafe,\n                '; Z surface  : ' + this.zSurface,\n                '; Z depth    : ' + this.zDepth\n            )\n        }\n        else {\n            this.gcode.push(\n                '; Beam range : ' + this.beamRange.min + ' to ' + this.beamRange.max,\n                '; Beam power : ' + this.beamPower.min + ' to ' + this.beamPower.max + ' %'\n            )\n        }\n\n        // Print activated options\n        let options = ['smoothing', 'trimLine', 'joinPixel', 'burnWhite', 'verboseG', 'diagonal']\n\n        for (var i = options.length - 1; i >= 0; i--) {\n            if (! this[options[i]]) {\n                options.splice(i, 1)\n            }\n        }\n\n        if (options.length) {\n            this.gcode.push('; Options    : ' + options.join(', '))\n        }\n\n        // Set feed rates\n        this.gcode.push('')\n\n        if (this.rapidRate) {\n           this.gcode.push('G0 F' + this.rapidRate)\n        }\n\n        this.gcode.push('G1 F' + this.feedRate)\n        this.gcode.push('')\n    }\n\n    // Map S value to pixel power\n    _mapPixelPower(value) {\n        let range = this.milling ? { min: 0, max: this.zDepth } : this.realBeamRange\n        return value * (range.max - range.min) / 255 + range.min\n    }\n\n    // Compute and return a command, return null if not changed\n    _command(name, value) {\n        // If the value argument is an object\n        if (typeof value === 'object') {\n            // Computed commands line\n            let commands = Array.prototype.slice.call(arguments)\n            let command, line = []\n\n            // for each command\n            for (var i = 0, il = commands.length; i < il; i++) {\n                command = this._command.apply(this, commands[i])\n                command && line.push(command)\n            }\n\n            // Return the line if not empty\n            return line.length ? line.join(' ') : null\n        }\n\n        // Format the value\n        value = value.toFixed(this.precision[name] || 0)\n\n        // If the value was changed or if verbose mode on\n        if (this.verboseG || value !== this.lastCommands[name]) {\n            this.lastCommands[name] = value\n            return name + value\n        }\n\n        // No change\n        return null\n    }\n\n    // Get a pixel power value from the canvas data grid\n    _getPixelPower(x, y, defaultValue) {\n        try {\n            // Reverse Y value since canvas as top/left origin\n            y = this.size.height - y - 1\n\n            // Get pixel info\n            let pixel = this.getPixel(x, y)\n\n            // Reversed gray value [ 0 = white | 255 = black ]\n            return 255 - pixel.gray\n        }\n        catch (error) {\n            if (arguments.length === 3) {\n                return defaultValue\n            }\n            throw error\n        }\n    }\n\n    // Get a point from the current line with real world coordinates\n    _getPoint(index) {\n        // Get the point object from the current line\n        let point = this.currentLine[index]\n\n        // No point\n        if (! point) {\n            return null\n        }\n\n        // Commands\n        point.G = point.s ? ['G', 1] : this.G0\n        point.X = (point.x * this.toolDiameter) + this.offsets.X\n        point.Y = (point.y * this.toolDiameter) + this.offsets.Y\n        point.S = this._mapPixelPower(point.s)\n\n        // Offsets\n        if (this.diagonal) {\n            // Vertical offset\n            point.Y += this.toolDiameter\n\n            // Horizontal offset\n            if (point.first || point.lastWhite) {\n                point.X += this.beamOffset\n                point.Y -= this.beamOffset\n            }\n            else if (point.last || point.lastColored) {\n                point.X -= this.beamOffset\n                point.Y += this.beamOffset\n            }\n        }\n        else {\n            // Vertical offset\n            point.Y += this.beamOffset\n\n            // Horizontal offset\n            if (point.first || point.lastWhite) {\n                point.X += this.beamOffset\n            }\n            else if (point.last || point.lastColored) {\n                point.X -= this.beamOffset\n            }\n        }\n\n        // Return the point\n        return point\n    }\n\n    // Remove all trailing white spaces from the current line\n    _trimCurrentLine() {\n        // Remove white spaces from the left\n        let point = this.currentLine[0]\n\n        while (point && ! point.p) {\n            this.currentLine.shift()\n            point = this.currentLine[0]\n        }\n\n        // Remove white spaces from the right\n        point = this.currentLine[this.currentLine.length - 2]\n\n        while (point && ! point.p) {\n            this.currentLine.pop()\n            point = this.currentLine[this.currentLine.length - 2]\n        }\n\n        // Return the new line length\n        return this.currentLine.length\n    }\n\n    // Join pixel with same power\n    _reduceCurrentLine() {\n        // Line too short to be reduced\n        if (this.currentLine.length < 3) {\n            return this.currentLine.length\n        }\n\n        // Extract all points exept the first one\n        let points = this.currentLine.splice(1)\n\n        // Get current power\n        let power = this.currentLine[0].p\n\n        // For each extracted point\n        for (var point, i = 0, il = points.length - 1; i < il; i++) {\n            // Current point\n            point = points[i]\n\n            // On power change\n            if (power !== point.p) {\n                this.currentLine.push(point)\n            }\n\n            // Update power\n            power = point.p\n        }\n\n        // Add last point\n        this.currentLine.push(points[i])\n    }\n\n    // Add extra white pixels at the ends\n    _overscanCurrentLine(reversed) {\n        // Number of pixels to add on each side\n        let pixels = this.overscan / this.ppm.x\n\n        // Get first/last point\n        let firstPoint = this.currentLine[0]\n        let lastPoint  = this.currentLine[this.currentLine.length - 1]\n\n        // Is last white/colored point ?\n        firstPoint.s && (firstPoint.lastWhite  = true)\n        lastPoint.s  && (lastPoint.lastColored = true)\n\n        // Reversed line ?\n        reversed ? (lastPoint.s = 0) : (firstPoint.s = 0)\n\n        // Create left/right points\n        let rightPoint = { x: lastPoint.x + pixels , y: lastPoint.y , s: 0, p: 0 }\n        let leftPoint  = { x: firstPoint.x - pixels, y: firstPoint.y, s: 0, p: 0 }\n\n        if (this.diagonal) {\n            leftPoint.y  += pixels\n            rightPoint.y -= pixels\n        }\n\n        // Add left/right points to current line\n        this.currentLine.unshift(leftPoint)\n        this.currentLine.push(rightPoint)\n    }\n\n    // Process current line and return an array of GCode text lines\n    _processCurrentLine(reversed) {\n        if (this.milling) {\n            return this._processMillingLine(reversed)\n        }\n\n        return this._processLaserLine(reversed)\n    }\n\n    // Process current line and return an array of GCode text lines\n    _processMillingLine(reversed) {\n        // Skip empty line\n        if (! this._trimCurrentLine()) {\n            return null\n        }\n\n        // Join pixel with same power\n        if (this.joinPixel) {\n            this._reduceCurrentLine()\n        }\n\n        // Mark first and last point on the current line\n        this.currentLine[0].first = true\n        this.currentLine[this.currentLine.length - 1].last = true\n\n        // Reversed line ?\n        if (reversed) {\n            this.currentLine = this.currentLine.reverse()\n        }\n\n        // Point index\n        let point, index = 0\n\n        // Init loop vars...\n        let command, gcode = []\n\n        let addCommand = (...args) => {\n            command = this._command(...args)\n            command && gcode.push(command)\n        }\n\n        // Get first point\n        point = this._getPoint(index)\n\n        let plung = false\n        let Z, zMax\n\n        let pass = (passNum) => {\n            // Move to start of the line\n            addCommand(['G', 0], ['Z', this.zSafe])\n            addCommand(['G', 0], ['X', point.X], ['Y', point.Y])\n            addCommand(['G', 0], ['Z', this.zSurface])\n\n            // For each point on the line\n            while (point) {\n                if (point.S) {\n                    if (plung) {\n                        addCommand(['G', 0], ['Z', this.zSurface])\n                        plung = false\n                    }\n\n                    Z    = point.S\n                    zMax = this.passDepth * passNum\n\n                    // Last pass\n                    if (passNum < this.passes) {\n                        Z = Math.max(Z, -zMax)\n                    }\n\n                    addCommand(['G', 1], ['Z', this.zSurface + Z])\n                    addCommand(['G', 1], ['X', point.X], ['Y', point.Y])\n                }\n                else {\n                    if (plung) {\n                        addCommand(['G', 1], ['Z', this.zSurface])\n                        plung = false\n                    }\n\n                    addCommand(['G', 0], ['Z', this.zSafe])\n                    addCommand(['G', 0], ['X', point.X], ['Y', point.Y])\n                }\n\n                if (point.lastWhite || point.lastColored) {\n                    plung = true\n                }\n\n                // Get next point\n                point = this._getPoint(++index)\n            }\n\n            // Move to Z safe\n            addCommand(['G', 1], ['Z', this.zSurface])\n            addCommand(['G', 0], ['Z', this.zSafe])\n        }\n\n        for (var i = 1; i <= this.passes; i++) {\n            pass(i)\n\n            if (! gcode.length) {\n                break\n            }\n\n            if (this.gcodes.length < i) {\n                this.gcodes.push([])\n            }\n            else {\n                this.gcodes[i - 1].push.apply(this.gcodes[i - 1], gcode)\n            }\n\n            index = 0\n            gcode = []\n            point = this._getPoint(index)\n\n            this.lastCommands = {}\n        }\n\n        // Not sure what to return...\n        return null\n    }\n\n    // Process current line and return an array of GCode text lines\n    _processLaserLine(reversed) {\n        // Trim trailing white spaces ?\n        if (this.trimLine && ! this._trimCurrentLine()) {\n            // Skip empty line\n            return null\n        }\n\n        // Join pixel with same power\n        if (this.joinPixel) {\n            this._reduceCurrentLine()\n        }\n\n        // Overscan ?\n        if (this.overscan) {\n            this._overscanCurrentLine(reversed)\n        }\n\n        // Mark first and last point on the current line\n        this.currentLine[0].first = true\n        this.currentLine[this.currentLine.length - 1].last = true\n\n        // Reversed line ?\n        if (reversed) {\n            this.currentLine = this.currentLine.reverse()\n        }\n\n        // Point index\n        let point, index = 0\n\n        // Init loop vars...\n        let command, gcode = []\n\n        let addCommand = (...args) => {\n            command = this._command(...args)\n            command && gcode.push(command)\n        }\n\n        // Get first point\n        point = this._getPoint(index)\n\n        // Move to start of the line\n        addCommand(this.G0, ['X', point.X], ['Y', point.Y], ['S', 0])\n\n        // Get next point\n        point = this._getPoint(++index)\n\n        // For each point on the line\n        while (point) {\n            // Burn to next point\n            addCommand(point.G, ['X', point.X], ['Y', point.Y], ['S', point.S])\n\n            // Get next point\n            point = this._getPoint(++index)\n        }\n\n        // Return gcode commands array\n        if (gcode.length) {\n            return gcode\n        }\n\n        // Empty line\n        return null\n    }\n\n    // Parse horizontally\n    _scanHorizontally(nonBlocking) {\n        // Init loop vars\n        let x = 0, y = 0\n        let s, p, point, gcode\n        let w = this.size.width\n        let h = this.size.height\n\n        let reversed    = false\n        let lastWhite   = false\n        let lastColored = false\n\n        let computeCurrentLine = () => {\n            // Reset current line\n            this.currentLine = []\n\n            // Reset point object\n            point = null\n\n            // For each pixel on the line\n            for (x = 0; x <= w; x++) {\n                // Get pixel power\n                s = p = this._getPixelPower(x, y, p)\n\n                // Is last white/colored pixel\n                lastWhite   = point && ! point.p && p\n                lastColored = point && point.p && ! p\n\n                // Pixel color from last one on normal line\n                if (! reversed && point) {\n                    s = point.p\n                }\n\n                // Create point object\n                point = { x: x, y: y, s: s, p: p }\n\n                // Set last white/colored pixel\n                lastWhite   && (point.lastWhite   = true)\n                lastColored && (point.lastColored = true)\n\n                // Add point to current line\n                this.currentLine.push(point)\n            }\n        }\n\n        let percent     = 0\n        let lastPercent = 0\n\n        let processCurrentLine = () => {\n            // Process pixels line\n            gcode = this._processCurrentLine(reversed)\n\n            // Call progress callback\n            percent = Math.round((y / h) * 100)\n\n            if (percent > lastPercent) {\n                this._onProgress({ gcode, percent })\n            }\n\n            lastPercent = percent\n\n            // Skip empty gcode line\n            if (! gcode) {\n                return\n            }\n\n            // Toggle line state\n            reversed = ! reversed\n\n            // Concat line\n            this.gcode.push.apply(this.gcode, gcode)\n        }\n\n        let processNextLine = () => {\n            // Aborted ?\n            if (! this.running) {\n                return this._onAbort()\n            }\n\n            // Process line...\n            computeCurrentLine()\n            processCurrentLine()\n\n            y++\n\n            if (y < h) {\n                if (nonBlocking) {\n                    setTimeout(processNextLine, 0)\n                }\n                else {\n                    processNextLine()\n                }\n            }\n            else {\n                if (this.milling) {\n                    this.gcodes.forEach(gcode => {\n                        this.gcode.push.apply(this.gcode, gcode)\n                    })\n                }\n\n                this._onDone({ gcode: this.gcode })\n                this.running = false\n            }\n        }\n\n        processNextLine()\n    }\n\n    // Parse diagonally\n    _scanDiagonally(nonBlocking) {\n        // Init loop vars\n        let x = 0, y = 0\n        let s, p, point, gcode\n        let w = this.size.width\n        let h = this.size.height\n\n        let totalLines  = w + h - 1\n        let lineNum     = 0\n        let reversed    = false\n        let lastWhite   = false\n        let lastColored = false\n\n        let computeCurrentLine = (x, y) => {\n            // Reset current line\n            this.currentLine = []\n\n            // Reset point object\n            point = null\n\n            // Increment line num\n            lineNum++\n\n            while(true) {\n                // Y limit reached !\n                if (y < -1 || y == h) {\n                    break\n                }\n\n                // X limit reached !\n                if (x < 0 || x > w) {\n                    break\n                }\n\n                // Get pixel power\n                s = p = this._getPixelPower(x, y, p)\n\n                // Is last white/colored pixel\n                lastWhite   = point && (! point.p && p)\n                lastColored = point && (point.p && ! p)\n\n                // Pixel color from last one on normal line\n                if (! reversed && point) {\n                    s = point.p\n                }\n\n                // Create point object\n                point = { x: x, y: y, s: s, p: p }\n\n                // Set last white/colored pixel\n                lastWhite   && (point.lastWhite   = true)\n                lastColored && (point.lastColored = true)\n\n                // Add the new point\n                this.currentLine.push(point)\n\n                // Next coords\n                x++\n                y--\n            }\n        }\n\n        let percent     = 0\n        let lastPercent = 0\n\n        let processCurrentLine = () => {\n            // Process pixels line\n            gcode = this._processCurrentLine(reversed)\n\n            // Call progress callback\n            percent = Math.round((lineNum / totalLines) * 100)\n\n            if (percent > lastPercent) {\n                this._onProgress({ gcode, percent })\n            }\n\n            lastPercent = percent\n\n            // Skip empty gcode line\n            if (! gcode) {\n                return\n            }\n\n            // Toggle line state\n            reversed = ! reversed\n\n            // Concat line\n            this.gcode.push.apply(this.gcode, gcode)\n        }\n\n        let processNextLine = () => {\n            // Aborted ?\n            if (! this.running) {\n                return this._onAbort()\n            }\n\n            // Process line...\n            computeCurrentLine(x, y)\n            processCurrentLine()\n\n            if (! x) y++\n            else x++\n\n            if (y === h) {\n                x++\n                y--\n            }\n\n            if (y < h && x < w) {\n                if (nonBlocking) {\n                    setTimeout(processNextLine, 0)\n                }\n                else {\n                    processNextLine()\n                }\n            }\n            else {\n                this._onDone({ gcode: this.gcode })\n                this.running = false\n            }\n        }\n\n        processNextLine()\n    }\n\n    _onProgress(event) {\n        //console.log('progress:', event.percent)\n    }\n\n    _onDone(event) {\n        //console.log('done:', event.gcode.length)\n    }\n\n    _onAbort() {\n        //console.log('abort')\n    }\n\n    on(event, callback, context) {\n        let method = '_on' + event[0].toUpperCase() + event.slice(1)\n\n        if (! this[method] || typeof this[method] !== 'function') {\n            throw new Error('Undefined event: ' + event)\n        }\n\n        this[method] = event => callback.call(context || this, event)\n\n        return this\n    }\n\n    // Return the bitmap height-map\n    getHeightMap(settings) {\n        if (this.running) {\n            return\n        }\n\n        // Init loop vars\n        this.running  = true\n        let heightMap = []\n\n        let x = 0\n        let y = 0\n        let w = this.size.width\n        let h = this.size.height\n\n        let percent     = 0\n        let lastPercent = 0\n\n        // Defaults settings\n        settings = settings || {}\n\n        // Register user callbacks\n        this._registerUserCallbacks(settings)\n\n        // Non blocking mode ?\n        let nonBlocking = this.nonBlocking\n\n        if (settings.nonBlocking !== undefined) {\n            nonBlocking = settings.nonBlocking\n        }\n\n        let computeCurrentLine = () => {\n            // Reset current line\n            let pixels = []\n\n            // For each pixel on the line\n            for (x = 0; x < w; x++) {\n                pixels.push(this._mapPixelPower(this._getPixelPower(x, y)))\n            }\n\n            // Call progress callback\n            percent = Math.round((y / h) * 100)\n\n            if (percent > lastPercent) {\n                //onProgress.call(settings.progressContext || this, { pixels, percent })\n                this._onProgress({ pixels, percent })\n            }\n\n            lastPercent = percent\n\n            // Add pixels line\n            heightMap.push(pixels)\n        }\n\n        let processNextLine = () => {\n            // Aborted ?\n            if (! this.running) {\n                return this._onAbort()\n            }\n\n            // Process line...\n            computeCurrentLine()\n\n            y++\n\n            if (y < h) {\n                if (nonBlocking) {\n                    setTimeout(processNextLine, 0)\n                }\n                else {\n                    processNextLine()\n                }\n            }\n            else {\n                //onDone.call(settings.doneContext || this, { heightMap })\n                this._onDone({ heightMap })\n                this.running = false\n            }\n        }\n\n        processNextLine()\n\n        if (! nonBlocking) {\n            return heightMap\n        }\n    }\n}\n\n// Exports\nexport { RasterToGcode }\nexport default RasterToGcode\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lw.raster2gcode/raster-to-gcode.js","import canvasFilters from './canvas-filters'\n\n// CanvasGrid class\nclass CanvasGrid {\n    // Class constructor...\n    constructor(settings) {\n        // Init properties\n        this.cellSize   = 1024\n        this.scaleRatio = { x: 1, y: 1 }\n        this.filters    = {}\n\n        Object.assign(this, settings || {})\n\n        if (! this.scaleRatio.x) {\n            this.scaleRatio = { x: this.scaleRatio, y: this.scaleRatio }\n        }\n\n        this.size   = { width: 0, height: 0, cols: 0, rows: 0 }\n        this.file   = null\n        this.image  = null\n        this.url    = null\n        this.canvas = []\n        this.pixels = []\n    }\n\n    // <input> can be Image, File, URL object or URL string (http://* or data:image/*)\n    load(input) {\n        // Load File object\n        if (input instanceof File) {\n            return this.loadFromFile(input)\n        }\n\n        // Load Image object\n        if (input instanceof Image) {\n            return this.loadFromImage(input)\n        }\n\n        // Load URL object\n        if (typeof input === 'string' || input instanceof URL) {\n            return this.loadFromURL(input.trim())\n        }\n\n        // Return rejected promise with an Error object\n        return Promise.reject(new Error('Unsupported input format.'))\n    }\n\n    // Load image\n    _loadImage(src, reject, resolve) {\n        // Create Image object\n        let image = new Image()\n\n        // Register for load and error events\n        image.onload = event => {\n            this.loadFromImage(image).then(resolve).catch(reject)\n        }\n\n        image.onerror = event => {\n            reject(new Error('An error occurred while loading the image : ' + src))\n        }\n\n        // Load the image from File url\n        image.src = src\n    }\n\n    // Load from File object\n    loadFromFile(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof File)) {\n                reject(new Error('Input param must be a File object.'))\n            }\n\n            // Set input file\n            this.file = input\n\n            // Load image\n            this._loadImage(URL.createObjectURL(input), reject, resolve)\n        })\n    }\n\n    // Load from URL object or string\n    loadFromURL(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof URL) && typeof input !== 'string') {\n                reject(new Error('Input param must be a URL string or object.'))\n            }\n\n            // Create url object\n            let url = input instanceof URL ? input : new URL(input)\n\n            // Set url\n            this.url = url\n\n            // Load image\n            this._loadImage(url, reject, resolve)\n        })\n    }\n\n    // Load from Image object\n    loadFromImage(input) {\n        return new Promise((resolve, reject) => {\n            // Bad input type\n            if (! (input instanceof Image)) {\n                reject(new Error('Input param must be a Image object.'))\n            }\n\n            // Set input image\n            this.image = input\n\n            // Process image\n            this._processImage()\n\n            // Resolve the promise\n            resolve(this)\n        })\n    }\n\n    _processImage() {\n        // Reset canvas grid\n        this.canvas = []\n        this.pixels = []\n\n        // Calculate grid size\n        let width  = Math.round(this.image.width * this.scaleRatio.x)\n        let height = Math.round(this.image.height * this.scaleRatio.y)\n        let cols   = Math.ceil(width / this.cellSize)\n        let rows   = Math.ceil(height / this.cellSize)\n\n        this.size = { width, height, cols, rows }\n\n        // Create canvas grid\n        let line    = null\n        let canvas  = null\n        let pixels  = null\n        let context = null\n\n        let x  = null // cols\n        let y  = null // rows\n        let sx = null // scaled cols\n        let sy = null // scaled rows\n        let sw = null // scaled width\n        let sh = null // scaled height\n\n        // For each line\n        for (y = 0; y < this.size.rows; y++) {\n            // Reset current line\n            line   = []\n            pixels = []\n\n            // For each column\n            for (x = 0; x < this.size.cols; x++) {\n                // Create canvas element\n                canvas = document.createElement('canvas')\n\n                // Set canvas size\n                if (x === 0 || x < (this.size.cols - 1)) {\n                    canvas.width = this.size.width < this.cellSize\n                                 ? this.size.width : this.cellSize\n                }\n                else {\n                    // Get the rest for the last item (except the first one)\n                    canvas.width = this.size.width % this.cellSize\n                }\n\n                if (y === 0 || y < (this.size.rows - 1)) {\n                    canvas.height = this.size.height < this.cellSize\n                                  ? this.size.height : this.cellSize\n                }\n                else {\n                    // Get the rest for the last item (except the first one)\n                    canvas.height = this.size.height % this.cellSize\n                }\n\n                // Get canvas 2d context\n                context = canvas.getContext('2d')\n\n                // Fill withe background (avoid alpha chanel calculation)\n                context.fillStyle = 'white'\n                context.fillRect(0, 0, canvas.width, canvas.height)\n\n                // Draw the part of image in the canvas (scale)\n                sw = canvas.width / this.scaleRatio.x\n                sh = canvas.height / this.scaleRatio.y\n                sx = x * this.cellSize / this.scaleRatio.x\n                sy = y * this.cellSize / this.scaleRatio.y\n\n                context.drawImage(\n                    this.image, sx, sy, sw, sh,\n                    0, 0, canvas.width, canvas.height\n                )\n\n                // Apply image filters\n                canvasFilters(canvas, this.filters)\n\n                // Add the canvas to current line\n                line.push(canvas)\n\n                // Add the canvas image data to current line\n                pixels.push(context.getImageData(0, 0, canvas.width, canvas.height).data)\n            }\n\n            // Add the line to canvas grid\n            this.pixels.push(pixels)\n            this.canvas.push(line)\n        }\n    }\n\n    getPixel(x, y) {\n        // Test coords validity\n        x = parseInt(x)\n        y = parseInt(y)\n\n        if (isNaN(x) || isNaN(y)) {\n            throw new Error('[x, y] params must be Integer.')\n        }\n\n        // Test coords range\n        if (x < 0 || x >= this.size.width) {\n            throw new Error('Out of range: x = ' + x + ', max: ' + this.size.width)\n        }\n\n        if (y < 0 || y >= this.size.height) {\n            throw new Error('Out of range: y = ' + y + ', max: ' + this.size.height)\n        }\n\n        // Calculate target canvas coords\n        let col = parseInt(x / this.cellSize)\n        let row = parseInt(y / this.cellSize)\n\n        // Adjuste x/y values relative to canvas origin\n        col && (x -= this.cellSize * col)\n        row && (y -= this.cellSize * row)\n\n        // Get pixel data\n        let cellSize  = this.cellSize;\n\n        if (this.size.width < cellSize) {\n            cellSize = this.size.width\n        }\n        else if (this.size.width < cellSize * (col + 1)) {\n            cellSize = this.size.width % cellSize\n        }\n\n        let i         = (y * (cellSize * 4)) + (x * 4)\n        let pixels    = this.pixels[row][col]\n        let pixelData = pixels.slice(i, i + 4)\n\n        return {\n            color : { r: pixelData[0], g: pixelData[1], b: pixelData[2], a: pixelData[3] },\n            gray  : (pixelData[0] + pixelData[1] + pixelData[2]) / 3,\n            grid  : { col, row },\n            coords: { x, y }\n        }\n    }\n}\n\n// Exports\nexport { CanvasGrid }\nexport default CanvasGrid\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lw.raster2gcode/canvas-grid.js","import FloydSteinberg from 'floyd-steinberg'\n\n// Grayscale algorithms\nconst grayscaleAlgorithms = [\n    'none',\n    'average',\n    'desaturation',\n    'decomposition-min', 'decomposition-max',\n    'luma', 'luma-601', 'luma-709', 'luma-240',\n    'red-chanel', 'green-chanel', 'blue-chanel'\n]\n\n// Trucate color value in the 0-255 range\nfunction color(color) {\n    return color < 0 ? 0 : (color > 255 ? 255 : color);\n}\n\n// Filters ...\nfunction invertColor(data, i, value) {\n    if (value) {\n        data[i]     = color(255 - data[i])\n        data[i + 1] = color(255 - data[i + 1])\n        data[i + 2] = color(255 - data[i + 2])\n    }\n}\n\nfunction brightness(data, i, value) {\n    if (value !== undefined) {\n        data[i]     = color(data[i]     + value)\n        data[i + 1] = color(data[i + 1] + value)\n        data[i + 2] = color(data[i + 2] + value)\n    }\n}\n\nfunction contrast(data, i, value) {\n    if (value !== undefined) {\n        data[i]     = color(value * (data[i]     - 128) + 128)\n        data[i + 1] = color(value * (data[i + 1] - 128) + 128)\n        data[i + 2] = color(value * (data[i + 2] - 128) + 128)\n    }\n}\n\nfunction gamma(data, i, value) {\n    if (value !== undefined) {\n        data[i]     = color(Math.exp(Math.log(255 * (data[i]     / 255)) * value))\n        data[i + 1] = color(Math.exp(Math.log(255 * (data[i + 1] / 255)) * value))\n        data[i + 2] = color(Math.exp(Math.log(255 * (data[i + 2] / 255)) * value))\n    }\n}\n\nfunction grayscale(data, i, algorithm, shades) {\n    // Graysale\n    // http://www.tannerhelland.com/3643/grayscale-image-algorithm-vb6/\n\n    // Unsupported algorithm\n    if (grayscaleAlgorithms.indexOf(algorithm) === -1) {\n        throw new Error('Unsupported grayscale algorithm: ' + algorithm)\n    }\n\n    // None\n    if (algorithm === 'none') {\n        return null\n    }\n\n    // Get Red/Green/Blue values\n    let gray\n    let r = data[i];\n    let g = data[i + 1];\n    let b = data[i + 2];\n\n    switch (algorithm) {\n        case 'average':\n            gray = (r + g + b) / 3\n            break\n\n        case 'luma': // Default\n            gray = (r * 0.3) + (g * 0.59) + (b * 0.11)\n            break\n\n        case 'luma-601': // CCIR-601\n            gray = (r * 0.299) + (g * 0.587) + (b * 0.114)\n            break\n\n        case 'luma-709': // ITU-R-709\n            gray = (r * 0.2126) + (g * 0.7152) + (b * 0.0722)\n            break\n\n        case 'luma-240': // SMPTE-240M\n            gray = (r * 0.212) + (g * 0.701) + (b * 0.087)\n            break\n\n        case 'desaturation':\n            gray = (Math.max(r, g, b) + Math.min(r, g, b)) / 2\n            break\n\n        case 'decomposition-min':\n            gray = Math.min(r, g, b)\n            break\n\n        case 'decomposition-max':\n            gray = Math.max(r, g, b)\n            break\n\n        case 'red-chanel':\n            gray = r\n            break\n\n        case 'green-chanel':\n            gray = g\n            break\n\n        case 'blue-chanel':\n            gray = b\n            break\n    }\n\n    // Shades of gray\n    if (shades !== undefined) {\n        gray = parseInt(gray / shades) * shades\n    }\n\n    // Force integer\n    gray = parseInt(gray)\n\n    // Set new r/g/b values\n    data[i]     = color(gray)\n    data[i + 1] = color(gray)\n    data[i + 2] = color(gray)\n}\n\n// Apply filters on provided canvas\nfunction canvasFilters(canvas, settings) {\n    settings = Object.assign({}, {\n        smoothing   : false,  // Smoothing [true|fale]\n        brightness  : 0,      // Image brightness [-255 to +255]\n        contrast    : 0,      // Image contrast [-255 to +255]\n        gamma       : 0,      // Image gamma correction [0.01 to 7.99]\n        grayscale   : 'none', // Graysale algorithm [average, luma, luma-601, luma-709, luma-240, desaturation, decomposition-[min|max], [red|green|blue]-chanel]\n        shadesOfGray: 256,    // Number of shades of gray [2-256]\n        invertColor : false,   // Invert color...\n        dithering   : false\n    }, settings || {})\n\n    // Get canvas 2d context\n    let context = canvas.getContext('2d')\n\n    // Smoothing\n    if (context.imageSmoothingEnabled !== undefined) {\n        context.imageSmoothingEnabled = settings.smoothing\n    }\n    else {\n        context.mozImageSmoothingEnabled    = settings.smoothing\n        context.webkitImageSmoothingEnabled = settings.smoothing\n        context.msImageSmoothingEnabled     = settings.smoothing\n        context.oImageSmoothingEnabled      = settings.smoothing\n    }\n\n    // Get image data\n    let imageData = context.getImageData(0, 0, canvas.width, canvas.height)\n    let data      = imageData.data\n\n    let contrastFactor, brightnessOffset, gammaCorrection, shadesOfGrayFactor\n\n    if (settings.contrast !== 0) {\n        contrastFactor = (259 * (settings.contrast + 255)) / (255 * (259 - settings.contrast))\n    }\n\n    if (settings.brightness !== 0) {\n        brightnessOffset = settings.brightness\n    }\n\n    if (settings.gamma !== 0) {\n        gammaCorrection = 1 / settings.gamma\n    }\n\n    // Shades of gray\n    if (settings.shadesOfGray > 1 && settings.shadesOfGray < 256) {\n        shadesOfGrayFactor = 255 / (settings.shadesOfGray - 1)\n    }\n\n    // For each pixel\n    for (let i = 0, il = data.length; i < il; i += 4) {\n        // Apply filters\n        invertColor(data, i, settings.invertColor)\n        brightness(data, i, brightnessOffset)\n        contrast(data, i, contrastFactor)\n        gamma(data, i, gammaCorrection)\n        grayscale(data, i, settings.grayscale, shadesOfGrayFactor)\n    }\n\n    if (settings.dithering) {\n        imageData = FloydSteinberg(imageData)\n    }\n\n    // Write new image data on the context\n    context.putImageData(imageData, 0, 0)\n}\n\n// Exports\nexport { canvasFilters }\nexport default canvasFilters\n\n\n\n// WEBPACK FOOTER //\n// ./lib/lw.raster2gcode/canvas-filters.js","/*\n * floyd-steinberg\n *\n * Using 2D error diffusion formula published by Robert Floyd and Louis Steinberg in 1976\n *\n * Javascript implementation of Floyd-Steinberg algorithm thanks to Forrest Oliphant @forresto and @meemoo \n * via iFramework https://github.com/meemoo/iframework/blob/master/src/nodes/image-monochrome-worker.js\n *\n * Accepts an object that complies with the HTML5 canvas imageData spec https://developer.mozilla.org/en-US/docs/Web/API/ImageData\n * In particular, it makes use of the width, height, and data properties\n *\n * License: MIT\n*/\n\nmodule.exports = floyd_steinberg;\n\nfunction floyd_steinberg(image) {\n  var imageData = image.data;\n  var imageDataLength = imageData.length;\n  var w = image.width;\n  var lumR = [],\n      lumG = [],\n      lumB = [];\n\n  var newPixel, err;\n\n  for (var i = 0; i < 256; i++) {\n    lumR[i] = i * 0.299;\n    lumG[i] = i * 0.587;\n    lumB[i] = i * 0.110;\n  }\n\n  // Greyscale luminance (sets r pixels to luminance of rgb)\n  for (var i = 0; i <= imageDataLength; i += 4) {\n    imageData[i] = Math.floor(lumR[imageData[i]] + lumG[imageData[i+1]] + lumB[imageData[i+2]]);\n  }\n\n  for (var currentPixel = 0; currentPixel <= imageDataLength; currentPixel += 4) {\n    // threshold for determining current pixel's conversion to a black or white pixel\n    newPixel = imageData[currentPixel] < 150 ? 0 : 255;\n    err = Math.floor((imageData[currentPixel] - newPixel) / 23);\n    imageData[currentPixel] = newPixel;\n    imageData[currentPixel + 4         ] += err * 7;\n    imageData[currentPixel + 4 * w - 4 ] += err * 3;\n    imageData[currentPixel + 4 * w     ] += err * 5;\n    imageData[currentPixel + 4 * w + 4 ] += err * 1;\n    // Set g and b pixels equal to r (effectively greyscales the image fully)\n    imageData[currentPixel + 1] = imageData[currentPixel + 2] = imageData[currentPixel];\n  }\n\n  return image;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/floyd-steinberg/floyd-steinberg.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}